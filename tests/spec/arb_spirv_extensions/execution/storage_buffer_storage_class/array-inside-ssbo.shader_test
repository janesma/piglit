# Test for SPV_KHR_storage_buffer_storage class using an array of arrays inside
# a ssbo, instead of a aoa of ssbo.
#
# Same test as
# tests/spec/arb_gl_spirv/execution/ssbo/array-inside-ssbo.shader_test
# but editing the SPIR-V code to replace the Uniform storage class and the
# BufferStorage decoration occurrences by StorageBuffer and Block, respectively.

[require]
SPIRV YES
GL >= 3.3
GLSL >= 4.50
GL_ARB_gl_spirv

[vertex shader passthrough]

[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 78
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %color
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpDecorate %color Location 0
               OpDecorate %_arr_v4float_uint_4 ArrayStride 16
               OpMemberDecorate %ssbo 0 Offset 0
               OpDecorate %ssbo Block
               OpDecorate %arr DescriptorSet 0
               OpDecorate %arr Binding 5
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Function_v4float = OpTypePointer Function %v4float
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %12 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %color = OpVariable %_ptr_Output_v4float Output
         %15 = OpConstantComposite %v4float %float_0 %float_1 %float_0 %float_1
       %uint = OpTypeInt 32 0
     %uint_4 = OpConstant %uint 4
%_arr_v4float_uint_4 = OpTypeArray %v4float %uint_4
       %ssbo = OpTypeStruct %_arr_v4float_uint_4
%_ptr_StorageBuffer_ssbo = OpTypePointer StorageBuffer %ssbo
        %arr = OpVariable %_ptr_StorageBuffer_ssbo StorageBuffer
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_StorageBuffer_v4float = OpTypePointer StorageBuffer %v4float
%float_610_072205 = OpConstant %float 610.072205
%float_24998_1719 = OpConstant %float 24998.1719
%float_8190_74414 = OpConstant %float 8190.74414
%float_26479_0312 = OpConstant %float 26479.0312
         %31 = OpConstantComposite %v4float %float_610_072205 %float_24998_1719 %float_8190_74414 %float_26479_0312
       %bool = OpTypeBool
     %v4bool = OpTypeVector %bool 4
      %int_1 = OpConstant %int 1
%float_15538_2891 = OpConstant %float 15538.2891
%float_5642_53711 = OpConstant %float 5642.53711
%float_n23131_3867 = OpConstant %float -23131.3867
%float_18541_5391 = OpConstant %float 18541.5391
         %46 = OpConstantComposite %v4float %float_15538_2891 %float_5642_53711 %float_n23131_3867 %float_18541_5391
      %int_2 = OpConstant %int 2
%float_n32637_8945 = OpConstant %float -32637.8945
%float_12265_4824 = OpConstant %float 12265.4824
%float_n13669_0615 = OpConstant %float -13669.0615
%float_27760_8262 = OpConstant %float 27760.8262
         %59 = OpConstantComposite %v4float %float_n32637_8945 %float_12265_4824 %float_n13669_0615 %float_27760_8262
      %int_3 = OpConstant %int 3
%float_n1013_09918 = OpConstant %float -1013.09918
%float_n23371_9824 = OpConstant %float -23371.9824
%float_n3101_10449 = OpConstant %float -3101.10449
%float_n19908_5312 = OpConstant %float -19908.5312
         %72 = OpConstantComposite %v4float %float_n1013_09918 %float_n23371_9824 %float_n3101_10449 %float_n19908_5312
       %main = OpFunction %void None %3
          %5 = OpLabel
 %fail_color = OpVariable %_ptr_Function_v4float Function
               OpStore %fail_color %12
               OpStore %color %15
         %25 = OpAccessChain %_ptr_StorageBuffer_v4float %arr %int_0 %int_0
         %26 = OpLoad %v4float %25
         %34 = OpFOrdNotEqual %v4bool %26 %31
         %35 = OpAny %bool %34
               OpSelectionMerge %37 None
               OpBranchConditional %35 %36 %37
         %36 = OpLabel
         %38 = OpLoad %v4float %fail_color
               OpStore %color %38
               OpBranch %37
         %37 = OpLabel
         %40 = OpAccessChain %_ptr_StorageBuffer_v4float %arr %int_0 %int_1
         %41 = OpLoad %v4float %40
         %47 = OpFOrdNotEqual %v4bool %41 %46
         %48 = OpAny %bool %47
               OpSelectionMerge %50 None
               OpBranchConditional %48 %49 %50
         %49 = OpLabel
         %51 = OpLoad %v4float %fail_color
               OpStore %color %51
               OpBranch %50
         %50 = OpLabel
         %53 = OpAccessChain %_ptr_StorageBuffer_v4float %arr %int_0 %int_2
         %54 = OpLoad %v4float %53
         %60 = OpFOrdNotEqual %v4bool %54 %59
         %61 = OpAny %bool %60
               OpSelectionMerge %63 None
               OpBranchConditional %61 %62 %63
         %62 = OpLabel
         %64 = OpLoad %v4float %fail_color
               OpStore %color %64
               OpBranch %63
         %63 = OpLabel
         %66 = OpAccessChain %_ptr_StorageBuffer_v4float %arr %int_0 %int_3
         %67 = OpLoad %v4float %66
         %73 = OpFOrdNotEqual %v4bool %67 %72
         %74 = OpAny %bool %73
               OpSelectionMerge %76 None
               OpBranchConditional %74 %75 %76
         %75 = OpLabel
         %77 = OpLoad %v4float %fail_color
               OpStore %color %77
               OpBranch %76
         %76 = OpLabel
               OpReturn
               OpFunctionEnd

[fragment shader]
#version 450

layout (location = 0) out vec4 color;

layout (std430, binding = 5) buffer ssbo {
	vec4 color[4];
} arr;



void main()
{
	vec4 fail_color = vec4(1.0, 0.0, 0.0, 1.0);
	color = vec4(0.0, 1.0, 0.0, 1.0);

	if (arr.color[0] != vec4(610.072190433, 24998.1713741, 8190.74402991, 26479.0313725)) {
	   color = fail_color;
	}
	if (arr.color[1] != vec4(15538.2894026, 5642.53723964, -23131.3873198, 18541.5383078)) {
	   color = fail_color;
	}
	if (arr.color[2] != vec4(-32637.8949874, 12265.4819562, -13669.0617838, 27760.8253605)) {
	   color = fail_color;
	}
	if (arr.color[3] != vec4(-1013.0991989, -23371.9822385, -3101.104448, -19908.5317922)) {
	   color = fail_color;
	}

}

[test]
clear color 0.2 0.2 0.2 0.2
clear

ssbo 5 64
ssbo 5 subdata float 0  610.072190433
ssbo 5 subdata float 4  24998.1713741
ssbo 5 subdata float 8  8190.74402991
ssbo 5 subdata float 12 26479.0313725

ssbo 5 subdata float 16 15538.2894026
ssbo 5 subdata float 20 5642.53723964
ssbo 5 subdata float 24 -23131.3873198
ssbo 5 subdata float 28 18541.5383078

ssbo 5 subdata float 32 -32637.8949874
ssbo 5 subdata float 36 12265.4819562
ssbo 5 subdata float 40 -13669.0617838
ssbo 5 subdata float 44 27760.8253605

ssbo 5 subdata float 48 -1013.0991989
ssbo 5 subdata float 52 -23371.9822385
ssbo 5 subdata float 56 -3101.104448
ssbo 5 subdata float 60 -19908.5317922

block binding 5
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo GL_NUM_ACTIVE_VARIABLES 1
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo GL_BUFFER_DATA_SIZE 64

verify program_query GL_ACTIVE_UNIFORMS 0

draw rect -1 -1 2 2
probe all rgba 0.00 1.0 0.0 1.0
