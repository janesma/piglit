# Simple SSBO test for SPV_KHR_storage_buffer_storage_class: just one
# stage. No arrays.
#
# Same test as tests/spec/arb_gl_spirv/execution/ssbo/simple.shader_test
# but editing the SPIR-V code to replace the Uniform storage class and the
# BufferStorage decoration occurrences by StorageBuffer and Block, respectively.

[require]
SPIRV YES
GL >= 3.3
GLSL >= 4.50
GL_ARB_gl_spirv

[vertex shader passthrough]

[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 50
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %color
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpDecorate %color Location 0
               OpMemberDecorate %ssbo 0 Offset 0
               OpMemberDecorate %ssbo 1 Offset 16
               OpDecorate %ssbo Block
               OpDecorate %components DescriptorSet 0
               OpDecorate %components Binding 5
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Function_v4float = OpTypePointer Function %v4float
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %12 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %color = OpVariable %_ptr_Output_v4float Output
         %15 = OpConstantComposite %v4float %float_0 %float_1 %float_0 %float_1
    %v2float = OpTypeVector %float 2
       %ssbo = OpTypeStruct %v4float %v2float
%_ptr_StorageBuffer_ssbo = OpTypePointer StorageBuffer %ssbo
 %components = OpVariable %_ptr_StorageBuffer_ssbo StorageBuffer
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_StorageBuffer_v4float = OpTypePointer StorageBuffer %v4float
%float_n6781_29834 = OpConstant %float -6781.29834
%float_1301_10352 = OpConstant %float 1301.10352
%float_19589_3906 = OpConstant %float 19589.3906
%float_n31590_043 = OpConstant %float -31590.043
         %29 = OpConstantComposite %v4float %float_n6781_29834 %float_1301_10352 %float_19589_3906 %float_n31590_043
       %bool = OpTypeBool
     %v4bool = OpTypeVector %bool 4
      %int_1 = OpConstant %int 1
%_ptr_StorageBuffer_v2float = OpTypePointer StorageBuffer %v2float
%float_4651_35693 = OpConstant %float 4651.35693
%float_n24122_5684 = OpConstant %float -24122.5684
         %43 = OpConstantComposite %v2float %float_4651_35693 %float_n24122_5684
     %v2bool = OpTypeVector %bool 2
       %main = OpFunction %void None %3
          %5 = OpLabel
 %fail_color = OpVariable %_ptr_Function_v4float Function
               OpStore %fail_color %12
               OpStore %color %15
         %23 = OpAccessChain %_ptr_StorageBuffer_v4float %components %int_0
         %24 = OpLoad %v4float %23
         %32 = OpFOrdNotEqual %v4bool %24 %29
         %33 = OpAny %bool %32
               OpSelectionMerge %35 None
               OpBranchConditional %33 %34 %35
         %34 = OpLabel
         %36 = OpLoad %v4float %fail_color
               OpStore %color %36
               OpBranch %35
         %35 = OpLabel
         %39 = OpAccessChain %_ptr_StorageBuffer_v2float %components %int_1
         %40 = OpLoad %v2float %39
         %45 = OpFOrdNotEqual %v2bool %40 %43
         %46 = OpAny %bool %45
               OpSelectionMerge %48 None
               OpBranchConditional %46 %47 %48
         %47 = OpLabel
         %49 = OpLoad %v4float %fail_color
               OpStore %color %49
               OpBranch %48
         %48 = OpLabel
               OpReturn
               OpFunctionEnd

[fragment shader]

#version 450

layout (location = 0) out vec4 color;
layout (std430, binding = 5) buffer ssbo
 {
    vec4 c1;
    vec2 c2;
 } components;

void main()
{
	vec4 fail_color = vec4(1.0, 0.0, 0.0, 1.0);
	color = vec4(0.0, 1.0, 0.0, 1.0);

	if (components.c1 != vec4(-6781.29825284, 1301.10353246, 19589.3908751, -31590.0424201)) {
	   color = fail_color;
	}

	if (components.c2 != vec2(4651.35672541, -24122.567834)) {
	   color = fail_color;
	}
}

[test]
ssbo 5 32 # size, aligned to 16
#c1
ssbo 5 subdata float 0  -6781.29825284
ssbo 5 subdata float 4  1301.10353246
ssbo 5 subdata float 8  19589.3908751
ssbo 5 subdata float 12 -31590.0424201

#c2
ssbo 5 subdata float 16 4651.35672541
ssbo 5 subdata float 20 -24122.567834

clear color 1.0 0.0 0.0 0.0
clear

block binding 5
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo GL_NUM_ACTIVE_VARIABLES 2
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo GL_BUFFER_DATA_SIZE 32

verify program_query GL_ACTIVE_UNIFORMS 0

draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
