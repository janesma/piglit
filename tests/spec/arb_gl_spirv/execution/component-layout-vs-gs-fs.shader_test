# Test layout component qualifier between multiple shader stages.
#
# Copied from
# arb_enhanced_layouts/execution/component-layout/vs-gs-fs.shader_test,
# the difference is that we explicitly specify locations for inputs and outputs
# in component-layout tests.  The current version of glslang doesn't handle a
# mixture of explicit and implicit locations for inputs and outputs, so we made
# all locations explicit.

[require]
SPIRV YES
GLSL >= 1.50
GL_ARB_enhanced_layouts
GL_ARB_separate_shader_objects

[vertex shader spirv]
; Automatically generated from the GLSL by gen_gl_spirv_tests.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 27
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %main "main" %a %b %vertex_to_gs %piglit_vertex %gl_VertexID %gl_InstanceID
               OpSource GLSL 450
               OpSourceExtension "GL_ARB_enhanced_layouts"
               OpSourceExtension "GL_ARB_separate_shader_objects"
               OpDecorate %a Location 0
               OpDecorate %b Component 3
               OpDecorate %b Location 0
               OpDecorate %vertex_to_gs Location 1
               OpDecorate %piglit_vertex Location 0
               OpDecorate %gl_VertexID BuiltIn VertexId
               OpDecorate %gl_InstanceID BuiltIn InstanceId
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%_ptr_Output_v3float = OpTypePointer Output %v3float
          %a = OpVariable %_ptr_Output_v3float Output
    %float_0 = OpConstant %float 0
 %float_0_75 = OpConstant %float 0.75
    %float_1 = OpConstant %float 1
         %13 = OpConstantComposite %v3float %float_0 %float_0_75 %float_1
%_ptr_Output_float = OpTypePointer Output %float
          %b = OpVariable %_ptr_Output_float Output
  %float_0_5 = OpConstant %float 0.5
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
%vertex_to_gs = OpVariable %_ptr_Output_v4float Output
%_ptr_Input_v4float = OpTypePointer Input %v4float
%piglit_vertex = OpVariable %_ptr_Input_v4float Input
        %int = OpTypeInt 32 1
%_ptr_Input_int = OpTypePointer Input %int
%gl_VertexID = OpVariable %_ptr_Input_int Input
%gl_InstanceID = OpVariable %_ptr_Input_int Input
       %main = OpFunction %void None %3
          %5 = OpLabel
               OpStore %a %13
               OpStore %b %float_0_5
         %22 = OpLoad %v4float %piglit_vertex
               OpStore %vertex_to_gs %22
               OpReturn
               OpFunctionEnd

[vertex shader]
#version 150
#extension GL_ARB_enhanced_layouts: require
#extension GL_ARB_separate_shader_objects: require

// consume X/Y/Z components
layout(location = 0) out vec3 a;

// consumes W component
layout(location = 0, component = 3) out float b;

layout(location = 1) out vec4 vertex_to_gs;

in vec4 piglit_vertex;

void main()
{
  a = vec3(0.0, 0.75, 1.0);
  b = 0.5;

  vertex_to_gs = piglit_vertex;
}

[geometry shader spirv]
; Automatically generated from the GLSL by gen_gl_spirv_tests.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 59
; Schema: 0
               OpCapability Geometry
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Geometry %main "main" %_ %vertex_to_gs %a_to_fs %a %b_to_fs %b
               OpExecutionMode %main Triangles
               OpExecutionMode %main Invocations 1
               OpExecutionMode %main OutputTriangleStrip
               OpExecutionMode %main OutputVertices 3
               OpSource GLSL 450
               OpSourceExtension "GL_ARB_enhanced_layouts"
               OpSourceExtension "GL_ARB_separate_shader_objects"
               OpName %_ ""
               OpMemberDecorate %gl_PerVertex 0 BuiltIn Position
               OpMemberDecorate %gl_PerVertex 1 BuiltIn PointSize
               OpMemberDecorate %gl_PerVertex 2 BuiltIn ClipDistance
               OpMemberDecorate %gl_PerVertex 3 BuiltIn CullDistance
               OpDecorate %gl_PerVertex Block
               OpDecorate %vertex_to_gs Location 1
               OpDecorate %a_to_fs Location 0
               OpDecorate %a Location 0
               OpDecorate %b_to_fs Component 3
               OpDecorate %b_to_fs Location 0
               OpDecorate %b Component 3
               OpDecorate %b Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
      %int_0 = OpConstant %int 0
      %int_3 = OpConstant %int 3
       %bool = OpTypeBool
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%gl_PerVertex = OpTypeStruct %v4float %float %_arr_float_uint_1 %_arr_float_uint_1
%_ptr_Output_gl_PerVertex = OpTypePointer Output %gl_PerVertex
          %_ = OpVariable %_ptr_Output_gl_PerVertex Output
     %uint_3 = OpConstant %uint 3
%_arr_v4float_uint_3 = OpTypeArray %v4float %uint_3
%_ptr_Input__arr_v4float_uint_3 = OpTypePointer Input %_arr_v4float_uint_3
%vertex_to_gs = OpVariable %_ptr_Input__arr_v4float_uint_3 Input
%_ptr_Input_v4float = OpTypePointer Input %v4float
%_ptr_Output_v4float = OpTypePointer Output %v4float
    %v3float = OpTypeVector %float 3
%_ptr_Output_v3float = OpTypePointer Output %v3float
    %a_to_fs = OpVariable %_ptr_Output_v3float Output
%_arr_v3float_uint_3 = OpTypeArray %v3float %uint_3
%_ptr_Input__arr_v3float_uint_3 = OpTypePointer Input %_arr_v3float_uint_3
          %a = OpVariable %_ptr_Input__arr_v3float_uint_3 Input
%_ptr_Input_v3float = OpTypePointer Input %v3float
%_ptr_Output_float = OpTypePointer Output %float
    %b_to_fs = OpVariable %_ptr_Output_float Output
%_arr_float_uint_3 = OpTypeArray %float %uint_3
%_ptr_Input__arr_float_uint_3 = OpTypePointer Input %_arr_float_uint_3
          %b = OpVariable %_ptr_Input__arr_float_uint_3 Input
%_ptr_Input_float = OpTypePointer Input %float
      %int_1 = OpConstant %int 1
       %main = OpFunction %void None %3
          %5 = OpLabel
          %i = OpVariable %_ptr_Function_int Function
               OpStore %i %int_0
               OpBranch %10
         %10 = OpLabel
               OpLoopMerge %12 %13 None
               OpBranch %14
         %14 = OpLabel
         %15 = OpLoad %int %i
         %18 = OpSLessThan %bool %15 %int_3
               OpBranchConditional %18 %11 %12
         %11 = OpLabel
         %31 = OpLoad %int %i
         %33 = OpAccessChain %_ptr_Input_v4float %vertex_to_gs %31
         %34 = OpLoad %v4float %33
         %36 = OpAccessChain %_ptr_Output_v4float %_ %int_0
               OpStore %36 %34
         %43 = OpLoad %int %i
         %45 = OpAccessChain %_ptr_Input_v3float %a %43
         %46 = OpLoad %v3float %45
               OpStore %a_to_fs %46
         %52 = OpLoad %int %i
         %54 = OpAccessChain %_ptr_Input_float %b %52
         %55 = OpLoad %float %54
               OpStore %b_to_fs %55
               OpEmitVertex
               OpBranch %13
         %13 = OpLabel
         %56 = OpLoad %int %i
         %58 = OpIAdd %int %56 %int_1
               OpStore %i %58
               OpBranch %10
         %12 = OpLabel
               OpReturn
               OpFunctionEnd

[geometry shader]
#version 150
#extension GL_ARB_enhanced_layouts: require
#extension GL_ARB_separate_shader_objects: require

layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;

// consume X/Y/Z components
layout(location = 0) in vec3 a[3];

// consumes W component
layout(location = 0, component = 3) in float b[3];

layout(location = 1) in vec4 vertex_to_gs[3];

// consume X/Y/Z components
layout(location = 0) out vec3 a_to_fs;

// consumes W component
layout(location = 0, component = 3) out float b_to_fs;

void main()
{
  for (int i = 0; i < 3; i++) {
    gl_Position = vertex_to_gs[i];
    a_to_fs = a[i];
    b_to_fs = b[i];
    EmitVertex();
  }
}

[fragment shader spirv]
; Automatically generated from the GLSL by gen_gl_spirv_tests.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 21
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %color %b_to_fs %a_to_fs
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpSourceExtension "GL_ARB_enhanced_layouts"
               OpSourceExtension "GL_ARB_separate_shader_objects"
               OpDecorate %color Location 0
               OpDecorate %b_to_fs Component 3
               OpDecorate %b_to_fs Location 0
               OpDecorate %a_to_fs Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %color = OpVariable %_ptr_Output_v4float Output
%_ptr_Input_float = OpTypePointer Input %float
    %b_to_fs = OpVariable %_ptr_Input_float Input
    %v3float = OpTypeVector %float 3
%_ptr_Input_v3float = OpTypePointer Input %v3float
    %a_to_fs = OpVariable %_ptr_Input_v3float Input
       %main = OpFunction %void None %3
          %5 = OpLabel
         %12 = OpLoad %float %b_to_fs
         %16 = OpLoad %v3float %a_to_fs
         %17 = OpCompositeExtract %float %16 0
         %18 = OpCompositeExtract %float %16 1
         %19 = OpCompositeExtract %float %16 2
         %20 = OpCompositeConstruct %v4float %12 %17 %18 %19
               OpStore %color %20
               OpReturn
               OpFunctionEnd

[fragment shader]
#version 150
#extension GL_ARB_enhanced_layouts: require
#extension GL_ARB_separate_shader_objects: require

out vec4 color;

// consume X/Y/Z components
layout(location = 0) in vec3 a_to_fs;

// consumes W component
layout(location = 0, component = 3) in float b_to_fs;

void main()
{
  color = vec4(b_to_fs, a_to_fs);
}

[test]
clear color 0.1 0.1 0.1 0.1
clear

draw rect -1 -1 2 2
probe all rgb 0.5 0 0.75
