# Tests the program interface ATOMIC_COUNTER_BUFFER and UNIFORM atomic
# counters in shaders constructed from SPIR-V binaries where no name
# reflection information is available.
#
# Queries related with names are excluded because they are not permitted
# for the ATOMIC_COUNTER_BUFFER interface.
#
# ARB_gl_spirv:
#
# 19. How should the program interface query operations behave for program
#    objects created from SPIR-V shaders?
#
#   C) Allow as much as possible to work "naturally". You can query for
#   the number of active resources, and for details about them. Anything
#   that doesn't query by name will work as expected... If everything
#   is specified a-priori by location/binding/offset/index/component
#   in the shader, this may be sufficient.
#
#   RESOLVED.  Pick (c), but also allow debug names to be returned if an
#   implementation wants to.

[require]
SPIRV ONLY
GL >= 3.3
GLSL >= 4.50
GL_ARB_gl_spirv
GL_ARB_shader_atomic_counters

[vertex shader passthrough]

[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 71
; Schema: 0
               OpCapability Shader
               OpCapability AtomicStorage
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %color
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpSourceExtension "GL_ARB_shader_atomic_counters"
               OpDecorate %a0 Offset 0
               OpDecorate %a0 DescriptorSet 0
               OpDecorate %a0 Binding 0
               OpDecorate %b0 Offset 0
               OpDecorate %b0 DescriptorSet 0
               OpDecorate %b0 Binding 1
               OpDecorate %b1 Offset 4
               OpDecorate %b1 DescriptorSet 0
               OpDecorate %b1 Binding 1
               OpDecorate %idx Location 3
               OpDecorate %idx DescriptorSet 0
               OpDecorate %idx Binding 6
               OpDecorate %a0_expected Location 0
               OpDecorate %a0_expected DescriptorSet 0
               OpDecorate %a0_expected Binding 3
               OpDecorate %color Location 0
               OpDecorate %b0_expected Location 1
               OpDecorate %b0_expected DescriptorSet 0
               OpDecorate %b0_expected Binding 4
               OpDecorate %b1_expected Location 2
               OpDecorate %b1_expected DescriptorSet 0
               OpDecorate %b1_expected Binding 5
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
%_ptr_AtomicCounter_uint = OpTypePointer AtomicCounter %uint
         %a0 = OpVariable %_ptr_AtomicCounter_uint AtomicCounter
     %uint_1 = OpConstant %uint 1
     %uint_0 = OpConstant %uint 0
         %b0 = OpVariable %_ptr_AtomicCounter_uint AtomicCounter
     %uint_2 = OpConstant %uint 2
%_arr_uint_uint_2 = OpTypeArray %uint %uint_2
%_ptr_AtomicCounter__arr_uint_uint_2 = OpTypePointer AtomicCounter %_arr_uint_uint_2
         %b1 = OpVariable %_ptr_AtomicCounter__arr_uint_uint_2 AtomicCounter
%_ptr_UniformConstant_uint = OpTypePointer UniformConstant %uint
        %idx = OpVariable %_ptr_UniformConstant_uint UniformConstant
%a0_expected = OpVariable %_ptr_UniformConstant_uint UniformConstant
       %bool = OpTypeBool
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %color = OpVariable %_ptr_Output_v4float Output
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
  %float_255 = OpConstant %float 255
%b0_expected = OpVariable %_ptr_UniformConstant_uint UniformConstant
%float_0_100000001 = OpConstant %float 0.100000001
%b1_expected = OpVariable %_ptr_UniformConstant_uint UniformConstant
%float_0_200000003 = OpConstant %float 0.200000003
         %70 = OpConstantComposite %v4float %float_0 %float_1 %float_0 %float_1
       %main = OpFunction %void None %3
          %5 = OpLabel
     %old_a0 = OpVariable %_ptr_Function_uint Function
     %old_b0 = OpVariable %_ptr_Function_uint Function
     %old_b1 = OpVariable %_ptr_Function_uint Function
         %13 = OpAtomicIIncrement %uint %a0 %uint_1 %uint_0
               OpStore %old_a0 %13
         %16 = OpAtomicIIncrement %uint %b0 %uint_1 %uint_0
               OpStore %old_b0 %16
         %24 = OpLoad %uint %idx
         %25 = OpAccessChain %_ptr_AtomicCounter_uint %b1 %24
         %26 = OpAtomicIIncrement %uint %25 %uint_1 %uint_0
               OpStore %old_b1 %26
         %27 = OpLoad %uint %old_a0
         %29 = OpLoad %uint %a0_expected
         %31 = OpINotEqual %bool %27 %29
               OpSelectionMerge %33 None
               OpBranchConditional %31 %32 %33
         %32 = OpLabel
         %40 = OpLoad %uint %old_a0
         %41 = OpConvertUToF %float %40
         %43 = OpFDiv %float %41 %float_255
         %44 = OpCompositeConstruct %v4float %float_1 %float_0 %43 %float_1
               OpStore %color %44
               OpReturn
         %33 = OpLabel
         %46 = OpLoad %uint %old_b0
         %48 = OpLoad %uint %b0_expected
         %49 = OpINotEqual %bool %46 %48
               OpSelectionMerge %51 None
               OpBranchConditional %49 %50 %51
         %50 = OpLabel
         %53 = OpLoad %uint %old_b0
         %54 = OpConvertUToF %float %53
         %55 = OpFDiv %float %54 %float_255
         %56 = OpCompositeConstruct %v4float %float_1 %float_0_100000001 %55 %float_1
               OpStore %color %56
               OpReturn
         %51 = OpLabel
         %58 = OpLoad %uint %old_b1
         %60 = OpLoad %uint %b1_expected
         %61 = OpINotEqual %bool %58 %60
               OpSelectionMerge %63 None
               OpBranchConditional %61 %62 %63
         %62 = OpLabel
         %65 = OpLoad %uint %old_b1
         %66 = OpConvertUToF %float %65
         %67 = OpFDiv %float %66 %float_255
         %68 = OpCompositeConstruct %v4float %float_1 %float_0_200000003 %67 %float_1
               OpStore %color %68
               OpReturn
         %63 = OpLabel
               OpStore %color %70
               OpReturn
               OpFunctionEnd

[fragment shader]
#version 450
#extension GL_ARB_shader_atomic_counters: require

layout(binding = 0, offset = 0) uniform atomic_uint a0;
layout(binding = 1, offset = 0) uniform atomic_uint b0;
layout(binding = 1, offset = 4) uniform atomic_uint b1[2];

layout(location = 0) uniform uint a0_expected;
layout(location = 1) uniform uint b0_expected;
layout(location = 2) uniform uint b1_expected;
layout(location = 3) uniform uint idx;

out vec4 color;

void main()
{
	uint old_a0 = atomicCounterIncrement(a0);
	uint old_b0 = atomicCounterIncrement(b0);
	uint old_b1 = atomicCounterIncrement(b1[idx]);

	if (old_a0 != a0_expected) {
		color = vec4(1.0, 0.0, float(old_a0) / 255.0, 1.0);
		return;
	}
	if (old_b0 != b0_expected) {
		color = vec4(1.0, 0.1, float(old_b0) / 255.0, 1.0);
		return;
	}
	if (old_b1 != b1_expected) {
		color = vec4(1.0, 0.2, float(old_b1) / 255.0, 1.0);
		return;
	}
	color = vec4(0.0, 1.0, 0.0, 1.0);
}

[test]
atomic counter buffer 0 1
atomic counter buffer 1 3

clear color 0.0 0.0 0.0 0.0
clear

atomic counter 0 0 17
atomic counter 1 0 31
atomic counter 1 1 4
atomic counter 1 2 9

uniform uint 0 17
uniform uint 1 31
uniform uint 3 1
uniform uint 2 9

# Queries
# -------

verify program_interface_query interface GL_ATOMIC_COUNTER_BUFFER GL_ACTIVE_RESOURCES 2
verify program_interface_query interface GL_ATOMIC_COUNTER_BUFFER GL_MAX_NUM_ACTIVE_VARIABLES 2

# Atomic counter: a0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_TYPE GL_UNSIGNED_INT_ATOMIC_COUNTER
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_ARRAY_SIZE 1
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_OFFSET 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_BLOCK_INDEX -1
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_ARRAY_STRIDE 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_MATRIX_STRIDE 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_IS_ROW_MAJOR 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_ATOMIC_COUNTER_BUFFER_INDEX 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_REFERENCED_BY_VERTEX_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_REFERENCED_BY_COMPUTE_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_REFERENCED_BY_TESS_CONTROL_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_REFERENCED_BY_GEOMETRY_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_REFERENCED_BY_FRAGMENT_SHADER 1
verify program_interface_query resourceByData GL_UNIFORM (atomic 0 0) GL_LOCATION -1

# Atomic counter: b0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_TYPE GL_UNSIGNED_INT_ATOMIC_COUNTER
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_ARRAY_SIZE 1
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_OFFSET 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_BLOCK_INDEX -1
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_ARRAY_STRIDE 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_MATRIX_STRIDE 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_IS_ROW_MAJOR 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_ATOMIC_COUNTER_BUFFER_INDEX 1
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_REFERENCED_BY_VERTEX_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_REFERENCED_BY_COMPUTE_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_REFERENCED_BY_TESS_CONTROL_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_REFERENCED_BY_GEOMETRY_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_REFERENCED_BY_FRAGMENT_SHADER 1
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 0) GL_LOCATION -1

# Atomic counter: b1
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_TYPE GL_UNSIGNED_INT_ATOMIC_COUNTER
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_ARRAY_SIZE 2
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_OFFSET 4
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_BLOCK_INDEX -1
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_ARRAY_STRIDE 4
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_MATRIX_STRIDE 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_IS_ROW_MAJOR 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_ATOMIC_COUNTER_BUFFER_INDEX 1
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_REFERENCED_BY_VERTEX_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_REFERENCED_BY_COMPUTE_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_REFERENCED_BY_TESS_CONTROL_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_REFERENCED_BY_GEOMETRY_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_REFERENCED_BY_FRAGMENT_SHADER 1
verify program_interface_query resourceByData GL_UNIFORM (atomic 1 4) GL_LOCATION -1

# Atomic counter buffer
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (0) GL_BUFFER_BINDING 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (0) GL_BUFFER_DATA_SIZE 4
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (0) GL_NUM_ACTIVE_VARIABLES 1
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (0) GL_REFERENCED_BY_VERTEX_SHADER 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (0) GL_REFERENCED_BY_COMPUTE_SHADER 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (0) GL_REFERENCED_BY_TESS_CONTROL_SHADER 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (0) GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (0) GL_REFERENCED_BY_GEOMETRY_SHADER 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (0) GL_REFERENCED_BY_FRAGMENT_SHADER 1

# Atomic counter buffer
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (1) GL_BUFFER_BINDING 1
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (1) GL_BUFFER_DATA_SIZE 12
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (1) GL_NUM_ACTIVE_VARIABLES 2
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (1) GL_REFERENCED_BY_VERTEX_SHADER 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (1) GL_REFERENCED_BY_COMPUTE_SHADER 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (1) GL_REFERENCED_BY_TESS_CONTROL_SHADER 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (1) GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (1) GL_REFERENCED_BY_GEOMETRY_SHADER 0
verify program_interface_query resourceByData GL_ATOMIC_COUNTER_BUFFER (1) GL_REFERENCED_BY_FRAGMENT_SHADER 1

draw rect ortho 0 0 1 1
probe rgba 0 0 0.0 1.0 0.0 1.0
