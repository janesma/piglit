# Tests the program interface queries not related with names over
# matrices in UBOs (IS_ROW_MAJOR, MATRIX_STRIDE, TYPE) in shaders
# constructed from SPIR-V binaries where no name reflection information
# is available.
#
# ARB_gl_spirv:
#
# 19. How should the program interface query operations behave for program
#    objects created from SPIR-V shaders?
#
#   C) Allow as much as possible to work "naturally". You can query for
#   the number of active resources, and for details about them. Anything
#   that doesn't query by name will work as expected... If everything
#   is specified a-priori by location/binding/offset/index/component
#   in the shader, this may be sufficient.
#
#   RESOLVED.  Pick (c), but also allow debug names to be returned if an
#   implementation wants to.

[require]
SPIRV ONLY
GL >= 4.5
GLSL >= 4.50
GL_ARB_gl_spirv

[vertex shader passthrough]

[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 45
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %out_color
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpDecorate %out_color Location 0
               OpMemberDecorate %ComponentsBlock1 0 RowMajor
               OpMemberDecorate %ComponentsBlock1 0 Offset 0
               OpMemberDecorate %ComponentsBlock1 0 MatrixStride 16
               OpDecorate %ComponentsBlock1 Block
               OpDecorate %components1 DescriptorSet 0
               OpDecorate %components1 Binding 0
               OpMemberDecorate %ComponentsBlock2 0 ColMajor
               OpMemberDecorate %ComponentsBlock2 0 Offset 0
               OpMemberDecorate %ComponentsBlock2 0 MatrixStride 16
               OpDecorate %ComponentsBlock2 Block
               OpDecorate %components2 DescriptorSet 0
               OpDecorate %components2 Binding 5
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
  %out_color = OpVariable %_ptr_Output_v4float Output
%mat4v4float = OpTypeMatrix %v4float 4
%ComponentsBlock1 = OpTypeStruct %mat4v4float
%_ptr_Uniform_ComponentsBlock1 = OpTypePointer Uniform %ComponentsBlock1
%components1 = OpVariable %_ptr_Uniform_ComponentsBlock1 Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
      %int_3 = OpConstant %int 3
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
     %uint_3 = OpConstant %uint 3
%ComponentsBlock2 = OpTypeStruct %mat4v4float
%_ptr_Uniform_ComponentsBlock2 = OpTypePointer Uniform %ComponentsBlock2
%components2 = OpVariable %_ptr_Uniform_ComponentsBlock2 Uniform
       %main = OpFunction %void None %3
          %5 = OpLabel
         %20 = OpAccessChain %_ptr_Uniform_float %components1 %int_0 %int_3 %uint_0
         %21 = OpLoad %float %20
         %23 = OpAccessChain %_ptr_Uniform_float %components1 %int_0 %int_3 %uint_1
         %24 = OpLoad %float %23
         %26 = OpAccessChain %_ptr_Uniform_float %components1 %int_0 %int_3 %uint_2
         %27 = OpLoad %float %26
         %29 = OpAccessChain %_ptr_Uniform_float %components1 %int_0 %int_3 %uint_3
         %30 = OpLoad %float %29
         %31 = OpCompositeConstruct %v4float %21 %24 %27 %30
         %35 = OpAccessChain %_ptr_Uniform_float %components2 %int_0 %int_3 %uint_0
         %36 = OpLoad %float %35
         %37 = OpAccessChain %_ptr_Uniform_float %components2 %int_0 %int_3 %uint_1
         %38 = OpLoad %float %37
         %39 = OpAccessChain %_ptr_Uniform_float %components2 %int_0 %int_3 %uint_2
         %40 = OpLoad %float %39
         %41 = OpAccessChain %_ptr_Uniform_float %components2 %int_0 %int_3 %uint_3
         %42 = OpLoad %float %41
         %43 = OpCompositeConstruct %v4float %36 %38 %40 %42
         %44 = OpFAdd %v4float %31 %43
               OpStore %out_color %44
               OpReturn
               OpFunctionEnd

[fragment shader]
#version 450 core

layout(location = 0) out vec4 out_color;

layout (binding = 0, row_major) uniform ComponentsBlock1 {
    mat4 matrix;
} components1;

layout (binding = 5, column_major) uniform ComponentsBlock2 {
    mat4 matrix;
} components2;

void main()
{
    out_color =
        vec4(components1.matrix[3][0], components1.matrix[3][1], components1.matrix[3][2], components1.matrix[3][3])
      + vec4(components2.matrix[3][0], components2.matrix[3][1], components2.matrix[3][2], components2.matrix[3][3]);
}

[test]

block binding 0
block offset 0
block matrix stride 16
block row major 1
uniform mat4 ComponentsBlock1.matrix 0.11 0.12 0.13 0.14 0.21 0.22 0.23 0.24 0.31 0.32 0.33 0.34 0.41 0.42 0.43 0.44

block binding 5
block offset 0
block matrix stride 16
block row major 0
uniform mat4 ComponentsBlock2.matrix 0.11 0.12 0.13 0.14 0.21 0.22 0.23 0.24 0.31 0.32 0.33 0.34 0.41 0.42 0.43 0.44

# Queries

verify program_interface_query interface GL_PROGRAM_INPUT        GL_ACTIVE_RESOURCES 1
verify program_interface_query interface GL_PROGRAM_OUTPUT       GL_ACTIVE_RESOURCES 1
verify program_interface_query interface GL_UNIFORM_BLOCK        GL_ACTIVE_RESOURCES 2
verify program_interface_query interface GL_UNIFORM              GL_ACTIVE_RESOURCES 2

verify program_interface_query interface GL_UNIFORM_BLOCK        GL_MAX_NUM_ACTIVE_VARIABLES 1

verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_TYPE GL_FLOAT_MAT4
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_ARRAY_SIZE 1
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_OFFSET 0
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_ARRAY_STRIDE 0
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_MATRIX_STRIDE 16
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_IS_ROW_MAJOR 1
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_ATOMIC_COUNTER_BUFFER_INDEX -1
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_LOCATION -1
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_REFERENCED_BY_VERTEX_SHADER          0
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_REFERENCED_BY_COMPUTE_SHADER         0
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_REFERENCED_BY_TESS_CONTROL_SHADER    0
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_REFERENCED_BY_GEOMETRY_SHADER        0
verify program_interface_query resourceByData GL_UNIFORM (0 0) GL_REFERENCED_BY_FRAGMENT_SHADER        1

verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_TYPE GL_FLOAT_MAT4
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_ARRAY_SIZE 1
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_OFFSET 0
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_ARRAY_STRIDE 0
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_MATRIX_STRIDE 16
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_IS_ROW_MAJOR 0
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_ATOMIC_COUNTER_BUFFER_INDEX -1
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_LOCATION -1
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_REFERENCED_BY_VERTEX_SHADER          0
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_REFERENCED_BY_COMPUTE_SHADER         0
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_REFERENCED_BY_TESS_CONTROL_SHADER    0
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_REFERENCED_BY_GEOMETRY_SHADER        0
verify program_interface_query resourceByData GL_UNIFORM (5 0) GL_REFERENCED_BY_FRAGMENT_SHADER        1

draw rect -1 -1 2 2
probe all rgba 0.82 0.84 0.86 0.88
