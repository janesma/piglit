#XFB test using 64-bit floating types (double, dvecX).

[require]
SPIRV YES
GL >= 3.3
GLSL >= 4.50
GL_ARB_gl_spirv

[vertex shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 41
; Schema: 0
               OpCapability Shader
               OpCapability Float64
               OpCapability TransformFeedback
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %main "main" %_ %x1_out %x2_out %x3_out %gl_VertexID %gl_InstanceID
               OpExecutionMode %main Xfb
               OpSource GLSL 450
               OpSourceExtension "GL_ARB_enhanced_layouts"
               OpName %_ ""
               OpMemberDecorate %gl_PerVertex 0 BuiltIn Position
               OpMemberDecorate %gl_PerVertex 1 BuiltIn PointSize
               OpMemberDecorate %gl_PerVertex 2 BuiltIn ClipDistance
               OpMemberDecorate %gl_PerVertex 3 BuiltIn CullDistance
               OpDecorate %gl_PerVertex Block
               OpDecorate %_ XfbBuffer 0
               OpDecorate %_ XfbStride 56
               OpDecorate %x1_out Location 0
               OpDecorate %x1_out XfbBuffer 0
               OpDecorate %x1_out XfbStride 56
               OpDecorate %x1_out Offset 0
               OpDecorate %x2_out Location 1
               OpDecorate %x2_out XfbBuffer 0
               OpDecorate %x2_out XfbStride 56
               OpDecorate %x2_out Offset 8
               OpDecorate %x3_out Location 2
               OpDecorate %x3_out XfbBuffer 0
               OpDecorate %x3_out XfbStride 56
               OpDecorate %x3_out Offset 24
               OpDecorate %gl_VertexID BuiltIn VertexId
               OpDecorate %gl_InstanceID BuiltIn InstanceId
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%gl_PerVertex = OpTypeStruct %v4float %float %_arr_float_uint_1 %_arr_float_uint_1
%_ptr_Output_gl_PerVertex = OpTypePointer Output %gl_PerVertex
          %_ = OpVariable %_ptr_Output_gl_PerVertex Output
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
    %float_0 = OpConstant %float 0
         %17 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
%_ptr_Output_v4float = OpTypePointer Output %v4float
     %double = OpTypeFloat 64
%_ptr_Output_double = OpTypePointer Output %double
     %x1_out = OpVariable %_ptr_Output_double Output
   %double_1 = OpConstant %double 1
   %v2double = OpTypeVector %double 2
%_ptr_Output_v2double = OpTypePointer Output %v2double
     %x2_out = OpVariable %_ptr_Output_v2double Output
   %double_2 = OpConstant %double 2
   %double_3 = OpConstant %double 3
         %29 = OpConstantComposite %v2double %double_2 %double_3
   %v4double = OpTypeVector %double 4
%_ptr_Output_v4double = OpTypePointer Output %v4double
     %x3_out = OpVariable %_ptr_Output_v4double Output
   %double_4 = OpConstant %double 4
   %double_5 = OpConstant %double 5
   %double_6 = OpConstant %double 6
   %double_7 = OpConstant %double 7
         %37 = OpConstantComposite %v4double %double_4 %double_5 %double_6 %double_7
%_ptr_Input_int = OpTypePointer Input %int
%gl_VertexID = OpVariable %_ptr_Input_int Input
%gl_InstanceID = OpVariable %_ptr_Input_int Input
       %main = OpFunction %void None %3
          %5 = OpLabel
         %19 = OpAccessChain %_ptr_Output_v4float %_ %int_0
               OpStore %19 %17
               OpStore %x1_out %double_1
               OpStore %x2_out %29
               OpStore %x3_out %37
               OpReturn
               OpFunctionEnd

[vertex shader]
#version 450
#extension GL_ARB_enhanced_layouts: require

layout(location = 0, xfb_offset = 0) out double x1_out;
layout(location = 1, xfb_offset = 8) out dvec2 x2_out;
layout(location = 2, xfb_offset = 24) out dvec4 x3_out;

void main() {
        gl_Position = vec4(0.0);
        x1_out = 1.0lf;
        x2_out = dvec2(2.0lf, 3.0lf);
        x3_out = dvec4(4.0lf, 5.0lf, 6.0lf, 7.0lf);
}

[test]
xfb buffer object 0 128

xfb draw arrays GL_POINTS 0 1

verify query_object GL_PRIMITIVES_GENERATED 1
verify query_object GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 1

expected buffer 64
expected buffer double 0 1.0
expected buffer double 1 2.0
expected buffer double 2 3.0
expected buffer double 3 4.0
expected buffer double 4 5.0
expected buffer double 5 6.0

probe xfb buffer double 0 5

verify program_query GL_TRANSFORM_FEEDBACK_VARYINGS 3