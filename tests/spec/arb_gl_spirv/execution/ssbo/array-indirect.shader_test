# SSBO test using an array of ssbo and indirect(dynamically uniform)
# indexing. Just uses one stage.

[require]
SPIRV YES
GL >= 3.3
GLSL >= 4.50
GL_ARB_gl_spirv

[vertex shader passthrough]

[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 24
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %color
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpDecorate %color Location 0
               OpMemberDecorate %ssbo 0 Offset 0
               OpDecorate %ssbo BufferBlock
               OpDecorate %components DescriptorSet 0
               OpDecorate %components Binding 5
               OpDecorate %u_idx Location 10
               OpDecorate %u_idx DescriptorSet 0
               OpDecorate %u_idx Binding 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %color = OpVariable %_ptr_Output_v4float Output
       %ssbo = OpTypeStruct %v4float
       %uint = OpTypeInt 32 0
     %uint_3 = OpConstant %uint 3
%_arr_ssbo_uint_3 = OpTypeArray %ssbo %uint_3
%_ptr_Uniform__arr_ssbo_uint_3 = OpTypePointer Uniform %_arr_ssbo_uint_3
 %components = OpVariable %_ptr_Uniform__arr_ssbo_uint_3 Uniform
        %int = OpTypeInt 32 1
%_ptr_UniformConstant_int = OpTypePointer UniformConstant %int
      %u_idx = OpVariable %_ptr_UniformConstant_int UniformConstant
      %int_0 = OpConstant %int 0
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
       %main = OpFunction %void None %3
          %5 = OpLabel
         %19 = OpLoad %int %u_idx
         %22 = OpAccessChain %_ptr_Uniform_v4float %components %19 %int_0
         %23 = OpLoad %v4float %22
               OpStore %color %23
               OpReturn
               OpFunctionEnd

[fragment shader]

#version 450

layout (location = 0) out vec4 color;
layout (location = 10) uniform int u_idx;

layout (std430, binding = 5) buffer ssbo
 {
    vec4 c1;
 } components[3];

void main()
{
	color = components[u_idx].c1;
}

[test]
clear color 1.0 0.0 0.0 0.0
clear

ssbo 5 32 # size, aligned to 16
#c1
ssbo 5 subdata float 0  0.11
ssbo 5 subdata float 4  0.12
ssbo 5 subdata float 8  0.13
ssbo 5 subdata float 12 0.14

ssbo 6 32
#c1
ssbo 6 subdata float 0  0.21
ssbo 6 subdata float 4  0.22
ssbo 6 subdata float 8  0.23
ssbo 6 subdata float 12 0.24

ssbo 7 32
#c1
ssbo 7 subdata float 0  0.31
ssbo 7 subdata float 4  0.32
ssbo 7 subdata float 8  0.33
ssbo 7 subdata float 12 0.34

uniform int 10 0 # location 10, uniform u_idx
draw rect -1 -1 2 2
probe all rgba 0.11 0.12 0.13 0.14

uniform int 10 1 # location 10, uniform u_idx
draw rect -1 -1 2 2
probe all rgba 0.21 0.22 0.23 0.24

uniform int 10 2 # location 10, uniform u_idx
draw rect -1 -1 2 2
probe all rgba 0.31 0.32 0.33 0.34

block binding 5
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo[0] GL_NUM_ACTIVE_VARIABLES 1
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo[0] GL_BUFFER_DATA_SIZE 16

block binding 6
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo[1] GL_NUM_ACTIVE_VARIABLES 1
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo[1] GL_BUFFER_DATA_SIZE 16

verify program_query GL_ACTIVE_UNIFORMS 1