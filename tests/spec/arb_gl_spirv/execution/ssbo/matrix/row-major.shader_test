# SSBO test using a matrix. One stage

[require]
SPIRV YES
GL >= 3.3
GLSL >= 4.50
GL_ARB_gl_spirv

[vertex shader passthrough]

[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 76
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %color
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpName %_ ""
               OpDecorate %color Location 0
               OpMemberDecorate %ssbo 0 RowMajor
               OpMemberDecorate %ssbo 0 Offset 0
               OpMemberDecorate %ssbo 0 MatrixStride 16
               OpDecorate %ssbo BufferBlock
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 5
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Function_v4float = OpTypePointer Function %v4float
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %12 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %color = OpVariable %_ptr_Output_v4float Output
         %15 = OpConstantComposite %v4float %float_0 %float_1 %float_0 %float_1
%mat4v4float = OpTypeMatrix %v4float 4
       %ssbo = OpTypeStruct %mat4v4float
%_ptr_Uniform_ssbo = OpTypePointer Uniform %ssbo
          %_ = OpVariable %_ptr_Uniform_ssbo Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
%float_4575_7998 = OpConstant %float 4575.7998
%float_16690_9727 = OpConstant %float 16690.9727
%float_n2747_33765 = OpConstant %float -2747.33765
%float_n5854_81055 = OpConstant %float -5854.81055
         %29 = OpConstantComposite %v4float %float_4575_7998 %float_16690_9727 %float_n2747_33765 %float_n5854_81055
       %bool = OpTypeBool
     %v4bool = OpTypeVector %bool 4
      %int_1 = OpConstant %int 1
%float_14191_6123 = OpConstant %float 14191.6123
%float_n30557_1582 = OpConstant %float -30557.1582
%float_n30325_041 = OpConstant %float -30325.041
%float_5217_75732 = OpConstant %float 5217.75732
         %44 = OpConstantComposite %v4float %float_14191_6123 %float_n30557_1582 %float_n30325_041 %float_5217_75732
      %int_2 = OpConstant %int 2
%float_n30199_3086 = OpConstant %float -30199.3086
%float_n16199_5928 = OpConstant %float -16199.5928
%float_19382_7812 = OpConstant %float 19382.7812
%float_26363_8359 = OpConstant %float 26363.8359
         %57 = OpConstantComposite %v4float %float_n30199_3086 %float_n16199_5928 %float_19382_7812 %float_26363_8359
      %int_3 = OpConstant %int 3
%float_n31303_4219 = OpConstant %float -31303.4219
%float_2088_69482 = OpConstant %float 2088.69482
%float_28998_5918 = OpConstant %float 28998.5918
%float_n29557_3516 = OpConstant %float -29557.3516
         %70 = OpConstantComposite %v4float %float_n31303_4219 %float_2088_69482 %float_28998_5918 %float_n29557_3516
       %main = OpFunction %void None %3
          %5 = OpLabel
 %fail_color = OpVariable %_ptr_Function_v4float Function
               OpStore %fail_color %12
               OpStore %color %15
         %23 = OpAccessChain %_ptr_Uniform_v4float %_ %int_0 %int_0
         %24 = OpLoad %v4float %23
         %32 = OpFOrdNotEqual %v4bool %24 %29
         %33 = OpAny %bool %32
               OpSelectionMerge %35 None
               OpBranchConditional %33 %34 %35
         %34 = OpLabel
         %36 = OpLoad %v4float %fail_color
               OpStore %color %36
               OpBranch %35
         %35 = OpLabel
         %38 = OpAccessChain %_ptr_Uniform_v4float %_ %int_0 %int_1
         %39 = OpLoad %v4float %38
         %45 = OpFOrdNotEqual %v4bool %39 %44
         %46 = OpAny %bool %45
               OpSelectionMerge %48 None
               OpBranchConditional %46 %47 %48
         %47 = OpLabel
         %49 = OpLoad %v4float %fail_color
               OpStore %color %49
               OpBranch %48
         %48 = OpLabel
         %51 = OpAccessChain %_ptr_Uniform_v4float %_ %int_0 %int_2
         %52 = OpLoad %v4float %51
         %58 = OpFOrdNotEqual %v4bool %52 %57
         %59 = OpAny %bool %58
               OpSelectionMerge %61 None
               OpBranchConditional %59 %60 %61
         %60 = OpLabel
         %62 = OpLoad %v4float %fail_color
               OpStore %color %62
               OpBranch %61
         %61 = OpLabel
         %64 = OpAccessChain %_ptr_Uniform_v4float %_ %int_0 %int_3
         %65 = OpLoad %v4float %64
         %71 = OpFOrdNotEqual %v4bool %65 %70
         %72 = OpAny %bool %71
               OpSelectionMerge %74 None
               OpBranchConditional %72 %73 %74
         %73 = OpLabel
         %75 = OpLoad %v4float %fail_color
               OpStore %color %75
               OpBranch %74
         %74 = OpLabel
               OpReturn
               OpFunctionEnd

[fragment shader]

#version 450

layout (location = 0) out vec4 color;
layout (std430, binding = 5, row_major) buffer ssbo
 {
    mat4 matrix;
 };

void main()
{
	vec4 fail_color = vec4(1.0, 0.0, 0.0, 1.0);
	color = vec4(0.0, 1.0, 0.0, 1.0);

        /* Note that shader_runner doesn't rearrange automatically the
         * data for row_major matrices on ssbo, as ubo does. It just
         * put the data on the proper offsets. So take into account
         * that if you compare the values compared here with the
         * values at the data section
         */
	if (matrix[0] != vec4(4575.7996643, 16690.9719539, -2747.33765164, -5854.8105745)) {
	   color = fail_color;
	}

        if (matrix[1] != vec4(14191.6120546, -30557.1591211, -30325.0400702, 5217.75729)) {
	   color = fail_color;
	}

        if (matrix[2] != vec4(-30199.3084764, -16199.592401, 19382.7803769, 26363.8367742)) {
	   color = fail_color;
	}

        if (matrix[3] != vec4(-31303.4210269, 2088.69494163, 28998.5927672, -29557.3508507)) {
           color = fail_color;
	}
}

[test]
clear color 0.0 0.0 0.0 0.0
clear

ssbo 5 64
ssbo 5 subdata float 0  4575.7996643
ssbo 5 subdata float 4  14191.6120546
ssbo 5 subdata float 8  -30199.3084764
ssbo 5 subdata float 12 -31303.4210269
ssbo 5 subdata float 16 16690.9719539
ssbo 5 subdata float 20 -30557.1591211
ssbo 5 subdata float 24 -16199.592401
ssbo 5 subdata float 28 2088.69494163
ssbo 5 subdata float 32 -2747.33765164
ssbo 5 subdata float 36 -30325.0400702
ssbo 5 subdata float 40 19382.7803769
ssbo 5 subdata float 44 28998.5927672
ssbo 5 subdata float 48 -5854.8105745
ssbo 5 subdata float 52 5217.75729
ssbo 5 subdata float 56 26363.8367742
ssbo 5 subdata float 60 -29557.3508507

block binding 5
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo GL_NUM_ACTIVE_VARIABLES 1
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo GL_BUFFER_DATA_SIZE 64

verify program_query GL_ACTIVE_UNIFORMS 0

draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
